module.exports = function (grunt) {
  var config = {
    pkg: grunt.file.readJSON('package.json'),
    requirejs: {
      compile: {
        options: {
          baseUrl: ".",
          optimize: 'none',
          rawText: {},
          onBuildWrite: convert,
          preserveLicenseComments: false,
          name: 'mvs',
          skipModuleInsertion: true,
          skipSemiColonInsertion: true,
          mainConfigFile: "release.js",
          out: "dist/<%= pkg.name %>.min.js",
          findNestedDependencies: true,
          wrap: {
            start: "(function() {",
            end: "}());"
          }
        }
      }
    }
  };


  /**
   * Strip all definitions generated by requirejs
   * Convert "var" modules to var declarations
   * "var module" means the module only contains a return
   * statement that should be converted to a var declaration
   * This is indicated by including the file in any "var" folder
   * @param {String} name
   * @param {String} path
   * @param {String} contents The contents to be written (including their AMD wrappers)
   */
  function convert( name, path, contents ) {
    if (/\(*?, *?, *?\)/.test(contents)) {
      console.log(RegExp.$1)
      console.log(RegExp.$2)
      console.log(RegExp.$3)
    }
    console.log(name);
    console.log(path);
    console.log(contents)
    return contents;
  }

  grunt.initConfig(config);

  grunt.loadNpmTasks('grunt-contrib-requirejs');

  grunt.registerTask('default', ['requirejs']);

};